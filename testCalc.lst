(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) 20BC  0010000010111100 (   3)                 LD    R0 StackBaseLocation
(3001) 1C20  0001110000100000 (   4)                 ADD   R6 R0 #0
(3002) 1DBF  0001110110111111 (   5)                 ADD   R6 R6 #-1
(3003) 20CA  0010000011001010 (   6)                 LD    R0 HeaderInfoLocation
(3004) F022  1111000000100010 (   7)                 TRAP  x22
(3005) 20E1  0010000011100001 (   8)                 LD    R0 NewlineChar
(3006) F021  1111000000100001 (   9)                 TRAP  x21
(3007) E099  1110000010011001 (  10)                 LEA   R0 PromptMsg
(3008) F022  1111000000100010 (  11)                 TRAP  x22
(3009) F020  1111000000100000 (  12)                 TRAP  x20
(300A) F021  1111000000100001 (  13)                 TRAP  x21
(300B) 22A7  0010001010100111 (  15) Test            LD    R1 NegX
(300C) 1240  0001001001000000 (  16)                 ADD   R1 R1 R0
(300D) 0432  0000010000110010 (  17)                 BRZ   Exit
(300E) 22A5  0010001010100101 (  18)                 LD    R1 NegC
(300F) 1240  0001001001000000 (  19)                 ADD   R1 R1 R0
(3010) 04F2  0000010011110010 (  20)                 BRZ   OpClear
(3011) 22A3  0010001010100011 (  21)                 LD    R1 NegPlus
(3012) 1240  0001001001000000 (  22)                 ADD   R1 R1 R0
(3013) 0A07  0000101000000111 (  23)                 BRNP  NotAdd
(3014) 48BA  0100100010111010 (  24)                 JSR   OpAdd
(3015) 24EC  0010010011101100 (  25)                 LD    R2 ErrorValue
(3016) 1602  0001011000000010 (  26)                 ADD   R3 R0 R2
(3017) 0423  0000010000100011 (  27)                 BRZ   NewCommand
(3018) 4A50  0100101001010000 (  28)                 JSR   PUSH
(3019) 48EE  0100100011101110 (  29)                 JSR   OpDisplay
(301A) 0E20  0000111000100000 (  30)                 BRNZP NewCommand
(301B) 229B  0010001010011011 (  32) NotAdd          LD    R1 NegMult
(301C) 1240  0001001001000000 (  33)                 ADD   R1 R1 R0
(301D) 0A07  0000101000000111 (  34)                 BRNP  NotMult
(301E) 48F6  0100100011110110 (  35)                 JSR   OpMult
(301F) 24E2  0010010011100010 (  36)                 LD    R2 ErrorValue
(3020) 1602  0001011000000010 (  37)                 ADD   R3 R0 R2
(3021) 0419  0000010000011001 (  38)                 BRZ   NewCommand
(3022) 4A46  0100101001000110 (  39)                 JSR   PUSH
(3023) 48E4  0100100011100100 (  40)                 JSR   OpDisplay
(3024) 0E16  0000111000010110 (  41)                 BRNZP NewCommand
(3025) 2293  0010001010010011 (  43) NotMult         LD    R1 NegExl
(3026) 1240  0001001001000000 (  44)                 ADD   R1 R1 R0
(3027) 0A04  0000101000000100 (  45)                 BRNP  NotNeg
(3028) 4928  0100100100101000 (  46)                 JSR   OpNeg
(3029) 4A3F  0100101000111111 (  47)                 JSR   PUSH
(302A) 48DD  0100100011011101 (  48)                 JSR   OpDisplay
(302B) 0E0F  0000111000001111 (  49)                 BRNZP NewCommand
(302C) 228B  0010001010001011 (  51) NotNeg          LD    R1 NegD
(302D) 1240  0001001001000000 (  52)                 ADD   R1 R1 R0
(302E) 0A02  0000101000000010 (  53)                 BRNP  NotDisplay
(302F) 48D8  0100100011011000 (  54)                 JSR   OpDisplay
(3030) 0E0A  0000111000001010 (  55)                 BRNZP NewCommand
(3031) 2284  0010001010000100 (  57) NotDisplay      LD    R1 NegMinus
(3032) 1201  0001001000000001 (  58)                 ADD   R1 R0 R1
(3033) 0A0D  0000101000001101 (  59)                 BRNP  NotMinus
(3034) 48B3  0100100010110011 (  60)                 JSR   OpSub
(3035) 22CC  0010001011001100 (  61)                 LD    R1 ErrorValue
(3036) 1240  0001001001000000 (  62)                 ADD   R1 R1 R0
(3037) 0403  0000010000000011 (  63)                 BRZ   NewCommand
(3038) 4A30  0100101000110000 (  64)                 JSR   PUSH
(3039) 48CE  0100100011001110 (  65)                 JSR   OpDisplay
(303A) 0E00  0000111000000000 (  66)                 BRNZP NewCommand
(303B) E065  1110000001100101 (  68) NewCommand      LEA   R0 PromptMsg
(303C) F022  1111000000100010 (  69)                 TRAP  x22
(303D) F020  1111000000100000 (  70)                 TRAP  x20
(303E) F021  1111000000100001 (  71)                 TRAP  x21
(303F) 0FCB  0000111111001011 (  72)                 BRNZP Test
(3040) F025  1111000000100101 (  73) Exit            TRAP  x25
(3041) 2278  0010001001111000 (  75) NotMinus        LD    R1 NegMod
(3042) 1240  0001001001000000 (  76)                 ADD   R1 R1 R0
(3043) 0A07  0000101000000111 (  77)                 BRNP  NotMod
(3044) 48FA  0100100011111010 (  78)                 JSR   OpMod
(3045) 24BC  0010010010111100 (  79)                 LD    R2 ErrorValue
(3046) 1602  0001011000000010 (  80)                 ADD   R3 R0 R2
(3047) 05F3  0000010111110011 (  81)                 BRZ   NewCommand
(3048) 4A20  0100101000100000 (  82)                 JSR   PUSH
(3049) 48BE  0100100010111110 (  83)                 JSR   OpDisplay
(304A) 0FF0  0000111111110000 (  84)                 BRNZP NewCommand
(304B) 2270  0010001001110000 (  86) NotMod          LD    R1 NegS
(304C) 1240  0001001001000000 (  87)                 ADD   R1 R1 R0
(304D) 0A09  0000101000001001 (  88)                 BRNP  NotSave
(304E) 4A2E  0100101000101110 (  89)                 JSR   POP
(304F) 1820  0001100000100000 (  90)                 ADD   R4 R0 #0
(3050) 24B1  0010010010110001 (  91)                 LD    R2 ErrorValue
(3051) 1602  0001011000000010 (  92)                 ADD   R3 R0 R2
(3052) 05E8  0000010111101000 (  93)                 BRZ   NewCommand
(3053) B86A  1011100001101010 (  94)                 STI   R4 SavedValuePointer
(3054) 2092  0010000010010010 (  95)                 LD    R0 NewlineChar
(3055) F021  1111000000100001 (  96)                 TRAP  x21
(3056) 0FE4  0000111111100100 (  97)                 BRNZP NewCommand
(3057) 2263  0010001001100011 ( 102) NotSave         LD    R1 NegL
(3058) 1240  0001001001000000 ( 103)                 ADD   R1 R1 R0
(3059) 0A11  0000101000010001 ( 104)                 BRNP  NotLoad
(305A) A063  1010000001100011 ( 105)                 LDI   R0 SavedValuePointer
(305B) 26A6  0010011010100110 ( 106)                 LD    R3 ErrorValue
(305C) 18C0  0001100011000000 ( 107)                 ADD   R4 R3 R0
(305D) 0408  0000010000001000 ( 108)                 BRZ   DisplayLoadError
(305E) 4A0A  0100101000001010 ( 109)                 JSR   PUSH
(305F) 18C0  0001100011000000 ( 110)                 ADD   R4 R3 R0
(3060) 2086  0010000010000110 ( 111)                 LD    R0 NewlineChar
(3061) F021  1111000000100001 ( 112)                 TRAP  x21
(3062) 1920  0001100100100000 ( 113)                 ADD   R4 R4 #0
(3063) 0BD7  0000101111010111 ( 114)                 BRNP  NewCommand
(3064) 4A18  0100101000011000 ( 115)                 JSR   POP
(3065) 0FD5  0000111111010101 ( 116)                 BRNZP NewCommand
(3066) E058  1110000001011000 ( 119) DisplayLoadError LEA   R0 LoadValueErrorMessage
(3067) F022  1111000000100010 ( 120)                 TRAP  x22
(3068) 207E  0010000001111110 ( 121)                 LD    R0 NewlineChar
(3069) F021  1111000000100001 ( 122)                 TRAP  x21
(306A) 0FD0  0000111111010000 ( 123)                 BRNZP NewCommand
(306B) 22F0  0010001011110000 ( 126) NotLoad         LD    R1 ASCIIBUFFLocation
(306C) 2433  0010010000110011 ( 127)                 LD    R2 MaxDigits
(306D) 1636  0001011000110110 ( 128) ValueLoop       ADD   R3 R0 #-10
(306E) 0408  0000010000001000 ( 129)                 BRZ   Goodlnput
(306F) 14A0  0001010010100000 ( 130)                 ADD   R2 R2 #0
(3070) 0416  0000010000010110 ( 131)                 BRZ   TooLargeInput
(3071) 14BF  0001010010111111 ( 132)                 ADD   R2 R2 #-1
(3072) 7040  0111000001000000 ( 133)                 STR   R0 R1 #0
(3073) 1261  0001001001100001 ( 134)                 ADD   R1 R1 #1
(3074) F020  1111000000100000 ( 135)                 TRAP  x20
(3075) F021  1111000000100001 ( 136)                 TRAP  x21
(3076) 0FF6  0000111111110110 ( 137)                 BRNZP ValueLoop
(3077) 24E4  0010010011100100 ( 139) Goodlnput       LD    R2 ASCIIBUFFLocation
(3078) 94BF  1001010010111111 ( 140)                 NOT   R2 R2
(3079) 14A1  0001010010100001 ( 141)                 ADD   R2 R2 #1
(307A) 1042  0001000001000010 ( 142)                 ADD   R0 R1 R2
(307B) 49ED  0100100111101101 ( 143)                 JSR   PUSH
(307C) 2685  0010011010000101 ( 144)                 LD    R3 ErrorValue
(307D) 16C0  0001011011000000 ( 145)                 ADD   R3 R3 R0
(307E) 05BC  0000010110111100 ( 146)                 BRZ   NewCommand
(307F) 20DC  0010000011011100 ( 147)                 LD    R0 ASCIIBUFFLocation
(3080) 49E8  0100100111101000 ( 148)                 JSR   PUSH
(3081) 2680  0010011010000000 ( 149)                 LD    R3 ErrorValue
(3082) 16C0  0001011011000000 ( 150)                 ADD   R3 R3 R0
(3083) 05B7  0000010110110111 ( 151)                 BRZ   NewCommand
(3084) 48D9  0100100011011001 ( 152)                 JSR   ASCIItoBinary
(3085) 49E3  0100100111100011 ( 153)                 JSR   PUSH
(3086) 0FB4  0000111110110100 ( 154)                 BRNZP NewCommand
(3087) F020  1111000000100000 ( 156) TooLargeInput   TRAP  x20
(3088) F021  1111000000100001 ( 157)                 TRAP  x21
(3089) 1636  0001011000110110 ( 158)                 ADD   R3 R0 #-10
(308A) 0BFC  0000101111111100 ( 159)                 BRNP  TooLargeInput
(308B) E004  1110000000000100 ( 160)                 LEA   R0 TooManyDigits
(308C) F022  1111000000100010 ( 161)                 TRAP  x22
(308D) 2059  0010000001011001 ( 162)                 LD    R0 NewlineChar
(308E) F021  1111000000100001 ( 163)                 TRAP  x21
(308F) 0FAB  0000111110101011 ( 164)                 BRNZP NewCommand
(3090) 0054  0000000001010100 ( 166) TooManyDigits   .FILL x0054
(3091) 006F  0000000001101111 ( 166)                 .FILL x006F
(3092) 006F  0000000001101111 ( 166)                 .FILL x006F
(3093) 0020  0000000000100000 ( 166)                 .FILL x0020
(3094) 006D  0000000001101101 ( 166)                 .FILL x006D
(3095) 0061  0000000001100001 ( 166)                 .FILL x0061
(3096) 006E  0000000001101110 ( 166)                 .FILL x006E
(3097) 0079  0000000001111001 ( 166)                 .FILL x0079
(3098) 0020  0000000000100000 ( 166)                 .FILL x0020
(3099) 0064  0000000001100100 ( 166)                 .FILL x0064
(309A) 0069  0000000001101001 ( 166)                 .FILL x0069
(309B) 0067  0000000001100111 ( 166)                 .FILL x0067
(309C) 0069  0000000001101001 ( 166)                 .FILL x0069
(309D) 0074  0000000001110100 ( 166)                 .FILL x0074
(309E) 0073  0000000001110011 ( 166)                 .FILL x0073
(309F) 0000  0000000000000000 ( 166)                 .FILL x0000
(30A0) 0003  0000000000000011 ( 169) MaxDigits       .FILL x0003
(30A1) 0045  0000000001000101 ( 170) PromptMsg       .FILL x0045
(30A2) 006E  0000000001101110 ( 170)                 .FILL x006E
(30A3) 0074  0000000001110100 ( 170)                 .FILL x0074
(30A4) 0065  0000000001100101 ( 170)                 .FILL x0065
(30A5) 0072  0000000001110010 ( 170)                 .FILL x0072
(30A6) 0020  0000000000100000 ( 170)                 .FILL x0020
(30A7) 0061  0000000001100001 ( 170)                 .FILL x0061
(30A8) 0020  0000000000100000 ( 170)                 .FILL x0020
(30A9) 0063  0000000001100011 ( 170)                 .FILL x0063
(30AA) 006F  0000000001101111 ( 170)                 .FILL x006F
(30AB) 006D  0000000001101101 ( 170)                 .FILL x006D
(30AC) 006D  0000000001101101 ( 170)                 .FILL x006D
(30AD) 0061  0000000001100001 ( 170)                 .FILL x0061
(30AE) 006E  0000000001101110 ( 170)                 .FILL x006E
(30AF) 0064  0000000001100100 ( 170)                 .FILL x0064
(30B0) 003A  0000000000111010 ( 170)                 .FILL x003A
(30B1) 0020  0000000000100000 ( 170)                 .FILL x0020
(30B2) 0000  0000000000000000 ( 170)                 .FILL x0000
(30B3) FFA8  1111111110101000 ( 171) NegX            .FILL xFFA8
(30B4) FFBD  1111111110111101 ( 172) NegC            .FILL xFFBD
(30B5) FFD5  1111111111010101 ( 173) NegPlus         .FILL xFFD5
(30B6) FFD3  1111111111010011 ( 174) NegMinus        .FILL xFFD3
(30B7) FFD6  1111111111010110 ( 175) NegMult         .FILL xFFD6
(30B8) FFBC  1111111110111100 ( 176) NegD            .FILL xFFBC
(30B9) FFDF  1111111111011111 ( 177) NegExl          .FILL xFFDF
(30BA) FFDB  1111111111011011 ( 178) NegMod          .FILL xFFDB
(30BB) FFB4  1111111110110100 ( 179) NegL            .FILL xFFB4
(30BC) FFAD  1111111110101101 ( 180) NegS            .FILL xFFAD
(30BD) 31A9  0011000110101001 ( 182) StackBaseLocation .FILL x31A9
(30BE) 3242  0011001001000010 ( 183) SavedValuePointer .FILL x3242
(30BF) 004E  0000000001001110 ( 184) LoadValueErrorMessage .FILL x004E
(30C0) 006F  0000000001101111 ( 184)                 .FILL x006F
(30C1) 0020  0000000000100000 ( 184)                 .FILL x0020
(30C2) 0056  0000000001010110 ( 184)                 .FILL x0056
(30C3) 0061  0000000001100001 ( 184)                 .FILL x0061
(30C4) 006C  0000000001101100 ( 184)                 .FILL x006C
(30C5) 0075  0000000001110101 ( 184)                 .FILL x0075
(30C6) 0065  0000000001100101 ( 184)                 .FILL x0065
(30C7) 0020  0000000000100000 ( 184)                 .FILL x0020
(30C8) 0053  0000000001010011 ( 184)                 .FILL x0053
(30C9) 0061  0000000001100001 ( 184)                 .FILL x0061
(30CA) 0076  0000000001110110 ( 184)                 .FILL x0076
(30CB) 0065  0000000001100101 ( 184)                 .FILL x0065
(30CC) 0064  0000000001100100 ( 184)                 .FILL x0064
(30CD) 0000  0000000000000000 ( 184)                 .FILL x0000
(30CE) 3243  0011001001000011 ( 185) HeaderInfoLocation .FILL x3243
(30CF) 5920  0101100100100000 ( 187) OpAdd           AND   R4 R4 #0
(30D0) 19C4  0001100111000100 ( 188)                 ADD   R4 R7 R4
(30D1) 49AB  0100100110101011 ( 189)                 JSR   POP
(30D2) 262F  0010011000101111 ( 190)                 LD    R3 ErrorValue
(30D3) 1A03  0001101000000011 ( 191)                 ADD   R5 R0 R3
(30D4) 0410  0000010000010000 ( 192)                 BRZ   AddRestoreR7
(30D5) 1220  0001001000100000 ( 193)                 ADD   R1 R0 #0
(30D6) 49A6  0100100110100110 ( 194)                 JSR   POP
(30D7) 1A03  0001101000000011 ( 195)                 ADD   R5 R0 R3
(30D8) 040C  0000010000001100 ( 196)                 BRZ   AddRestoreR7
(30D9) 1601  0001011000000001 ( 197)                 ADD   R3 R0 R1
(30DA) 5020  0101000000100000 ( 198)                 AND   R0 R0 #0
(30DB) 1100  0001000100000000 ( 199)                 ADD   R0 R4 R0
(30DC) 498C  0100100110001100 ( 200)                 JSR   PUSH
(30DD) 10E0  0001000011100000 ( 201)                 ADD   R0 R3 #0
(30DE) 498A  0100100110001010 ( 202)                 JSR   PUSH
(30DF) 48E4  0100100011100100 ( 203)                 JSR   RangeCheck
(30E0) 1A20  0001101000100000 ( 204)                 ADD   R5 R0 #0
(30E1) 499B  0100100110011011 ( 207)                 JSR   POP
(30E2) 1E20  0001111000100000 ( 208)                 ADD   R7 R0 #0
(30E3) 1160  0001000101100000 ( 209)                 ADD   R0 R5 #0
(30E4) C1C0  1100000111000000 ( 213)                 RET   
(30E5) 1F20  0001111100100000 ( 214) AddRestoreR7    ADD   R7 R4 #0
(30E6) C1C0  1100000111000000 ( 215) ExitAdd         RET   
(30E7) 000A  0000000000001010 ( 217) NewlineChar     .FILL x000A
(30E8) 5920  0101100100100000 ( 219) OpSub           AND   R4 R4 #0
(30E9) 19C4  0001100111000100 ( 220)                 ADD   R4 R7 R4
(30EA) 4992  0100100110010010 ( 221)                 JSR   POP
(30EB) 2616  0010011000010110 ( 222)                 LD    R3 ErrorValue
(30EC) 1A03  0001101000000011 ( 223)                 ADD   R5 R0 R3
(30ED) 0412  0000010000010010 ( 224)                 BRZ   SubRestoreR7
(30EE) 1220  0001001000100000 ( 225)                 ADD   R1 R0 #0
(30EF) 498D  0100100110001101 ( 226)                 JSR   POP
(30F0) 1A03  0001101000000011 ( 227)                 ADD   R5 R0 R3
(30F1) 040E  0000010000001110 ( 228)                 BRZ   SubRestoreR7
(30F2) 927F  1001001001111111 ( 229)                 NOT   R1 R1
(30F3) 1261  0001001001100001 ( 230)                 ADD   R1 R1 #1
(30F4) 1601  0001011000000001 ( 231)                 ADD   R3 R0 R1
(30F5) 5020  0101000000100000 ( 232)                 AND   R0 R0 #0
(30F6) 1100  0001000100000000 ( 233)                 ADD   R0 R4 R0
(30F7) 4971  0100100101110001 ( 234)                 JSR   PUSH
(30F8) 10E0  0001000011100000 ( 235)                 ADD   R0 R3 #0
(30F9) 496F  0100100101101111 ( 236)                 JSR   PUSH
(30FA) 48C9  0100100011001001 ( 237)                 JSR   RangeCheck
(30FB) 1620  0001011000100000 ( 238)                 ADD   R3 R0 #0
(30FC) 4980  0100100110000000 ( 241)                 JSR   POP
(30FD) 1E20  0001111000100000 ( 242)                 ADD   R7 R0 #0
(30FE) 10E0  0001000011100000 ( 243)                 ADD   R0 R3 #0
(30FF) C1C0  1100000111000000 ( 246)                 RET   
(3100) 1F20  0001111100100000 ( 247) SubRestoreR7    ADD   R7 R4 #0
(3101) C1C0  1100000111000000 ( 248) ExitSub         RET   
(3102) FC18  1111110000011000 ( 250) ErrorValue      .FILL xFC18
(3103) ECA5  1110110010100101 ( 252) OpClear         LEA   R6 StackBase
(3104) 1DBF  0001110110111111 ( 253)                 ADD   R6 R6 #-1
(3105) 21E1  0010000111100001 ( 254)                 LD    R0 NewlineChar
(3106) F021  1111000000100001 ( 255)                 TRAP  x21
(3107) 0F33  0000111100110011 ( 256)                 BRNZP NewCommand
(3108) 4974  0100100101110100 ( 258) OpDisplay       JSR   POP
(3109) 27F8  0010011111111000 ( 259)                 LD    R3 ErrorValue
(310A) 1A03  0001101000000011 ( 260)                 ADD   R5 R0 R3
(310B) 052F  0000010100101111 ( 261)                 BRZ   NewCommand
(310C) 4873  0100100001110011 ( 262)                 JSR   BinarytoASCII
(310D) 21D9  0010000111011001 ( 263)                 LD    R0 NewlineChar
(310E) F021  1111000000100001 ( 264)                 TRAP  x21
(310F) E09C  1110000010011100 ( 265)                 LEA   R0 ASCIIBUFF
(3110) F022  1111000000100010 ( 266)                 TRAP  x22
(3111) 1DBF  0001110110111111 ( 267)                 ADD   R6 R6 #-1
(3112) 21D4  0010000111010100 ( 268)                 LD    R0 NewlineChar
(3113) F021  1111000000100001 ( 269)                 TRAP  x21
(3114) 0F26  0000111100100110 ( 270)                 BRNZP NewCommand
(3115) 56E0  0101011011100000 ( 274) OpMult          AND   R3 R3 #0
(3116) 15E0  0001010111100000 ( 275)                 ADD   R2 R7 #0
(3117) 4965  0100100101100101 ( 276)                 JSR   POP
(3118) 29E9  0010100111101001 ( 277)                 LD    R4 ErrorValue
(3119) 1A04  0001101000000100 ( 278)                 ADD   R5 R0 R4
(311A) 0422  0000010000100010 ( 279)                 BRZ   MultRestoreR7
(311B) 1220  0001001000100000 ( 280)                 ADD   R1 R0 #0
(311C) 4960  0100100101100000 ( 281)                 JSR   POP
(311D) 1A04  0001101000000100 ( 282)                 ADD   R5 R0 R4
(311E) 041E  0000010000011110 ( 283)                 BRZ   MultRestoreR7
(311F) 18A0  0001100010100000 ( 284)                 ADD   R4 R2 #0
(3120) 1420  0001010000100000 ( 285)                 ADD   R2 R0 #0
(3121) 0603  0000011000000011 ( 286)                 BRZP  PosMultiplier
(3122) 16E1  0001011011100001 ( 287)                 ADD   R3 R3 #1
(3123) 94BF  1001010010111111 ( 288)                 NOT   R2 R2
(3124) 14A1  0001010010100001 ( 289)                 ADD   R2 R2 #1
(3125) 5020  0101000000100000 ( 291) PosMultiplier   AND   R0 R0 #0
(3126) 14A0  0001010010100000 ( 292)                 ADD   R2 R2 #0
(3127) 0416  0000010000010110 ( 293)                 BRZ   ExitMult
(3128) 1001  0001000000000001 ( 295) MultLoop        ADD   R0 R0 R1
(3129) 14BF  0001010010111111 ( 296)                 ADD   R2 R2 #-1
(312A) 03FD  0000001111111101 ( 297)                 BRP   MultLoop
(312B) 1220  0001001000100000 ( 299)                 ADD   R1 R0 #0
(312C) 1120  0001000100100000 ( 300)                 ADD   R0 R4 #0
(312D) 493B  0100100100111011 ( 301)                 JSR   PUSH
(312E) 1060  0001000001100000 ( 302)                 ADD   R0 R1 #0
(312F) 4939  0100100100111001 ( 303)                 JSR   PUSH
(3130) 4893  0100100010010011 ( 304)                 JSR   RangeCheck
(3131) 1A20  0001101000100000 ( 305)                 ADD   R5 R0 #0
(3132) 494A  0100100101001010 ( 308)                 JSR   POP
(3133) 1E20  0001111000100000 ( 309)                 ADD   R7 R0 #0
(3134) 1160  0001000101100000 ( 310)                 ADD   R0 R5 #0
(3135) 29CC  0010100111001100 ( 311)                 LD    R4 ErrorValue
(3136) 1A04  0001101000000100 ( 312)                 ADD   R5 R0 R4
(3137) 0406  0000010000000110 ( 313)                 BRZ   ExitMult
(3138) 16E0  0001011011100000 ( 315)                 ADD   R3 R3 #0
(3139) 0404  0000010000000100 ( 316)                 BRZ   ExitMult
(313A) 903F  1001000000111111 ( 318)                 NOT   R0 R0
(313B) 1021  0001000000100001 ( 319)                 ADD   R0 R0 #1
(313C) 0E01  0000111000000001 ( 321)                 BRNZP ExitMult
(313D) 1EA0  0001111010100000 ( 322) MultRestoreR7   ADD   R7 R2 #0
(313E) C1C0  1100000111000000 ( 323) ExitMult        RET   
(313F) 19E0  0001100111100000 ( 330) OpMod           ADD   R4 R7 #0
(3140) 27C1  0010011111000001 ( 331)                 LD    R3 ErrorValue
(3141) 493B  0100100100111011 ( 332)                 JSR   POP
(3142) 1A03  0001101000000011 ( 333)                 ADD   R5 R0 R3
(3143) 040B  0000010000001011 ( 334)                 BRZ   EXITMOD
(3144) 1220  0001001000100000 ( 335)                 ADD   R1 R0 #0
(3145) 4937  0100100100110111 ( 336)                 JSR   POP
(3146) 1A03  0001101000000011 ( 337)                 ADD   R5 R0 R3
(3147) 0407  0000010000000111 ( 338)                 BRZ   EXITMOD
(3148) 927F  1001001001111111 ( 340)                 NOT   R1 R1
(3149) 1261  0001001001100001 ( 341)                 ADD   R1 R1 #1
(314A) 1001  0001000000000001 ( 344) LOOP            ADD   R0 R0 R1
(314B) 07FE  0000011111111110 ( 345)                 BRZP  LOOP
(314C) 927F  1001001001111111 ( 347)                 NOT   R1 R1
(314D) 1261  0001001001100001 ( 348)                 ADD   R1 R1 #1
(314E) 1001  0001000000000001 ( 349)                 ADD   R0 R0 R1
(314F) 1F20  0001111100100000 ( 350) EXITMOD         ADD   R7 R4 #0
(3150) C1C0  1100000111000000 ( 351)                 RET   
(3151) 19E0  0001100111100000 ( 354) OpNeg           ADD   R4 R7 #0
(3152) 492A  0100100100101010 ( 355)                 JSR   POP
(3153) 27AE  0010011110101110 ( 356)                 LD    R3 ErrorValue
(3154) 1A03  0001101000000011 ( 357)                 ADD   R5 R0 R3
(3155) 0404  0000010000000100 ( 358)                 BRZ   NegExit
(3156) 903F  1001000000111111 ( 359)                 NOT   R0 R0
(3157) 1021  0001000000100001 ( 360)                 ADD   R0 R0 #1
(3158) 1F20  0001111100100000 ( 361)                 ADD   R7 R4 #0
(3159) C1C0  1100000111000000 ( 362)                 RET   
(315A) 1F20  0001111100100000 ( 364) NegExit         ADD   R7 R4 #0
(315B) C1C0  1100000111000000 ( 365)                 RET   
(315C) 31AC  0011000110101100 ( 370) ASCIIBUFFLocation .FILL x31AC
(315D) 03E8  0000001111101000 ( 372) FailureValue    .FILL x03E8
(315E) 19E0  0001100111100000 ( 379) ASCIItoBinary   ADD   R4 R7 #0
(315F) 491D  0100100100011101 ( 380)                 JSR   POP
(3160) 1420  0001010000100000 ( 381)                 ADD   R2 R0 #0
(3161) 491B  0100100100011011 ( 382)                 JSR   POP
(3162) 1F20  0001111100100000 ( 383)                 ADD   R7 R4 #0
(3163) 1220  0001001000100000 ( 384)                 ADD   R1 R0 #0
(3164) 5020  0101000000100000 ( 385)                 AND   R0 R0 #0
(3165) 1260  0001001001100000 ( 386)                 ADD   R1 R1 #0
(3166) 0418  0000010000011000 ( 387)                 BRZ   DoneAtoB
(3167) 2643  0010011001000011 ( 389)                 LD    R3 NegASCIIOffest
(3168) 1481  0001010010000001 ( 390)                 ADD   R2 R2 R1
(3169) 14BF  0001010010111111 ( 391)                 ADD   R2 R2 #-1
(316A) 6880  0110100010000000 ( 392)                 LDR   R4 R2 #0
(316B) 1903  0001100100000011 ( 393)                 ADD   R4 R4 R3
(316C) 1004  0001000000000100 ( 394)                 ADD   R0 R0 R4
(316D) 127F  0001001001111111 ( 395)                 ADD   R1 R1 #-1
(316E) 0410  0000010000010000 ( 396)                 BRZ   DoneAtoB
(316F) 14BF  0001010010111111 ( 398)                 ADD   R2 R2 #-1
(3170) 6880  0110100010000000 ( 399)                 LDR   R4 R2 #0
(3171) 1903  0001100100000011 ( 400)                 ADD   R4 R4 R3
(3172) EA3D  1110101000111101 ( 401)                 LEA   R5 LookUp10
(3173) 1B44  0001101101000100 ( 402)                 ADD   R5 R5 R4
(3174) 6940  0110100101000000 ( 403)                 LDR   R4 R5 #0
(3175) 1004  0001000000000100 ( 404)                 ADD   R0 R0 R4
(3176) 127F  0001001001111111 ( 405)                 ADD   R1 R1 #-1
(3177) 0407  0000010000000111 ( 406)                 BRZ   DoneAtoB
(3178) 14BF  0001010010111111 ( 408)                 ADD   R2 R2 #-1
(3179) 6880  0110100010000000 ( 409)                 LDR   R4 R2 #0
(317A) 1903  0001100100000011 ( 410)                 ADD   R4 R4 R3
(317B) EA3E  1110101000111110 ( 411)                 LEA   R5 LookUp100
(317C) 1B44  0001101101000100 ( 412)                 ADD   R5 R5 R4
(317D) 6940  0110100101000000 ( 413)                 LDR   R4 R5 #0
(317E) 1004  0001000000000100 ( 414)                 ADD   R0 R0 R4
(317F) C1C0  1100000111000000 ( 416) DoneAtoB        RET   
(3180) E22B  1110001000101011 ( 419) BinarytoASCII   LEA   R1 ASCIIBUFF
(3181) 1020  0001000000100000 ( 420)                 ADD   R0 R0 #0
(3182) 0803  0000100000000011 ( 421)                 BRN   NegSign
(3183) 24B4  0010010010110100 ( 422)                 LD    R2 ASCIIplus
(3184) 7440  0111010001000000 ( 423)                 STR   R2 R1 #0
(3185) 0E04  0000111000000100 ( 424)                 BRNZP Begin100
(3186) 24B2  0010010010110010 ( 426) NegSign         LD    R2 ASCIIminus
(3187) 7440  0111010001000000 ( 427)                 STR   R2 R1 #0
(3188) 903F  1001000000111111 ( 428)                 NOT   R0 R0
(3189) 1021  0001000000100001 ( 429)                 ADD   R0 R0 #1
(318A) 24AF  0010010010101111 ( 431) Begin100        LD    R2 ASCIIoffset
(318B) 26AF  0010011010101111 ( 432)                 LD    R3 Neg100
(318C) 1003  0001000000000011 ( 433) Loop100         ADD   R0 R0 R3
(318D) 0802  0000100000000010 ( 434)                 BRN   End100
(318E) 14A1  0001010010100001 ( 436)                 ADD   R2 R2 #1
(318F) 0FFC  0000111111111100 ( 437)                 BRNZP Loop100
(3190) 7441  0111010001000001 ( 439) End100          STR   R2 R1 #1
(3191) 26AA  0010011010101010 ( 440)                 LD    R3 Pos100
(3192) 1003  0001000000000011 ( 441)                 ADD   R0 R0 R3
(3193) 24A6  0010010010100110 ( 442)                 LD    R2 ASCIIoffset
(3194) 26A8  0010011010101000 ( 444) Begin10         LD    R3 Neg10
(3195) 1003  0001000000000011 ( 445) Loop10          ADD   R0 R0 R3
(3196) 0802  0000100000000010 ( 446)                 BRN   End10
(3197) 14A1  0001010010100001 ( 448)                 ADD   R2 R2 #1
(3198) 0FFC  0000111111111100 ( 449)                 BRNZP Loop10
(3199) 7442  0111010001000010 ( 450) End10           STR   R2 R1 #2
(319A) 102A  0001000000101010 ( 451)                 ADD   R0 R0 #10
(319B) 249E  0010010010011110 ( 452) Beginl          LD    R2 ASCIIoffset
(319C) 1480  0001010010000000 ( 453)                 ADD   R2 R2 R0
(319D) 7443  0111010001000011 ( 454)                 STR   R2 R1 #3
(319E) C1C0  1100000111000000 ( 455)                 RET   
(319F) 0000  0000000000000000 ( 458) StackMax        .FILL x0000
(31A0) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A1) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A2) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A3) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A4) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A5) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A6) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A7) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A8) 0000  0000000000000000 ( 458)                 .FILL x0000
(31A9) 0000  0000000000000000 ( 458) StackBase       .FILL x0000
(31AA) 0000  0000000000000000 ( 459) StackClose      .FILL x0000
(31AB) FFD0  1111111111010000 ( 461) NegASCIIOffest  .FILL xFFD0
(31AC) 0000  0000000000000000 ( 463) ASCIIBUFF       .FILL x0000
(31AD) 0000  0000000000000000 ( 463)                 .FILL x0000
(31AE) 0000  0000000000000000 ( 463)                 .FILL x0000
(31AF) 0000  0000000000000000 ( 463)                 .FILL x0000
(31B0) 0000  0000000000000000 ( 463) LookUp10        .FILL x0000
(31B1) 000A  0000000000001010 ( 464)                 .FILL x000A
(31B2) 0014  0000000000010100 ( 465)                 .FILL x0014
(31B3) 001E  0000000000011110 ( 466)                 .FILL x001E
(31B4) 0028  0000000000101000 ( 467)                 .FILL x0028
(31B5) 0032  0000000000110010 ( 468)                 .FILL x0032
(31B6) 003C  0000000000111100 ( 469)                 .FILL x003C
(31B7) 0046  0000000001000110 ( 470)                 .FILL x0046
(31B8) 0050  0000000001010000 ( 471)                 .FILL x0050
(31B9) 005A  0000000001011010 ( 472)                 .FILL x005A
(31BA) 0000  0000000000000000 ( 473) LookUp100       .FILL x0000
(31BB) 0064  0000000001100100 ( 474)                 .FILL x0064
(31BC) 00C8  0000000011001000 ( 475)                 .FILL x00C8
(31BD) 012C  0000000100101100 ( 476)                 .FILL x012C
(31BE) 0190  0000000110010000 ( 477)                 .FILL x0190
(31BF) 01F4  0000000111110100 ( 478)                 .FILL x01F4
(31C0) 0258  0000001001011000 ( 479)                 .FILL x0258
(31C1) 02BC  0000001010111100 ( 480)                 .FILL x02BC
(31C2) 0320  0000001100100000 ( 481)                 .FILL x0320
(31C3) 0384  0000001110000100 ( 482)                 .FILL x0384
(31C4) 365B  0011011001011011 ( 484) RangeCheck      ST    R3 SAVER3
(31C5) 13E0  0001001111100000 ( 485)                 ADD   R1 R7 #0
(31C6) 48B6  0100100010110110 ( 486)                 JSR   POP
(31C7) 2A36  0010101000110110 ( 487)                 LD    R5 Neg999
(31C8) 1805  0001100000000101 ( 488)                 ADD   R4 R0 R5
(31C9) 0206  0000001000000110 ( 489)                 BRP   BadRange
(31CA) 2A34  0010101000110100 ( 490)                 LD    R5 Pos999
(31CB) 1805  0001100000000101 ( 491)                 ADD   R4 R0 R5
(31CC) 0803  0000100000000011 ( 492)                 BRN   BadRange
(31CD) 1E60  0001111001100000 ( 495)                 ADD   R7 R1 #0
(31CE) 2651  0010011001010001 ( 496)                 LD    R3 SAVER3
(31CF) C1C0  1100000111000000 ( 497)                 RET   
(31D0) E02F  1110000000101111 ( 499) BadRange        LEA   R0 RangeErrorMsg
(31D1) F022  1111000000100010 ( 500)                 TRAP  x22
(31D2) A06D  1010000001101101 ( 501)                 LDI   R0 NewlineLocation
(31D3) F021  1111000000100001 ( 502)                 TRAP  x21
(31D4) 1E60  0001111001100000 ( 503)                 ADD   R7 R1 #0
(31D5) A06B  1010000001101011 ( 506)                 LDI   R0 FailureValueLocation
(31D6) 2649  0010011001001001 ( 507)                 LD    R3 SAVER3
(31D7) C1C0  1100000111000000 ( 508)                 RET   
(31D8) 0020  0000000000100000 ( 510) UnderflowMsg    .FILL x0020
(31D9) 0045  0000000001000101 ( 510)                 .FILL x0045
(31DA) 0072  0000000001110010 ( 510)                 .FILL x0072
(31DB) 0072  0000000001110010 ( 510)                 .FILL x0072
(31DC) 006F  0000000001101111 ( 510)                 .FILL x006F
(31DD) 0072  0000000001110010 ( 510)                 .FILL x0072
(31DE) 003A  0000000000111010 ( 510)                 .FILL x003A
(31DF) 0020  0000000000100000 ( 510)                 .FILL x0020
(31E0) 0054  0000000001010100 ( 510)                 .FILL x0054
(31E1) 006F  0000000001101111 ( 510)                 .FILL x006F
(31E2) 006F  0000000001101111 ( 510)                 .FILL x006F
(31E3) 0020  0000000000100000 ( 510)                 .FILL x0020
(31E4) 0046  0000000001000110 ( 510)                 .FILL x0046
(31E5) 0065  0000000001100101 ( 510)                 .FILL x0065
(31E6) 0077  0000000001110111 ( 510)                 .FILL x0077
(31E7) 0020  0000000000100000 ( 510)                 .FILL x0020
(31E8) 0056  0000000001010110 ( 510)                 .FILL x0056
(31E9) 0061  0000000001100001 ( 510)                 .FILL x0061
(31EA) 006C  0000000001101100 ( 510)                 .FILL x006C
(31EB) 0075  0000000001110101 ( 510)                 .FILL x0075
(31EC) 0065  0000000001100101 ( 510)                 .FILL x0065
(31ED) 0073  0000000001110011 ( 510)                 .FILL x0073
(31EE) 0020  0000000000100000 ( 510)                 .FILL x0020
(31EF) 006F  0000000001101111 ( 510)                 .FILL x006F
(31F0) 006E  0000000001101110 ( 510)                 .FILL x006E
(31F1) 0020  0000000000100000 ( 510)                 .FILL x0020
(31F2) 0074  0000000001110100 ( 510)                 .FILL x0074
(31F3) 0068  0000000001101000 ( 510)                 .FILL x0068
(31F4) 0065  0000000001100101 ( 510)                 .FILL x0065
(31F5) 0020  0000000000100000 ( 510)                 .FILL x0020
(31F6) 0053  0000000001010011 ( 510)                 .FILL x0053
(31F7) 0074  0000000001110100 ( 510)                 .FILL x0074
(31F8) 0061  0000000001100001 ( 510)                 .FILL x0061
(31F9) 0063  0000000001100011 ( 510)                 .FILL x0063
(31FA) 006B  0000000001101011 ( 510)                 .FILL x006B
(31FB) 002E  0000000000101110 ( 510)                 .FILL x002E
(31FC) 0000  0000000000000000 ( 510)                 .FILL x0000
(31FD) 0200  0000001000000000 ( 511) RangeSave       .FILL x0200
(31FE) FC19  1111110000011001 ( 512) Neg999          .FILL xFC19
(31FF) 03E7  0000001111100111 ( 513) Pos999          .FILL x03E7
(3200) 000A  0000000000001010 ( 514) RangeErrorMsg   .FILL x000A
(3201) 0045  0000000001000101 ( 515)                 .FILL x0045
(3202) 0072  0000000001110010 ( 515)                 .FILL x0072
(3203) 0072  0000000001110010 ( 515)                 .FILL x0072
(3204) 006F  0000000001101111 ( 515)                 .FILL x006F
(3205) 0072  0000000001110010 ( 515)                 .FILL x0072
(3206) 003A  0000000000111010 ( 515)                 .FILL x003A
(3207) 0020  0000000000100000 ( 515)                 .FILL x0020
(3208) 004E  0000000001001110 ( 515)                 .FILL x004E
(3209) 0075  0000000001110101 ( 515)                 .FILL x0075
(320A) 006D  0000000001101101 ( 515)                 .FILL x006D
(320B) 0062  0000000001100010 ( 515)                 .FILL x0062
(320C) 0065  0000000001100101 ( 515)                 .FILL x0065
(320D) 0072  0000000001110010 ( 515)                 .FILL x0072
(320E) 0020  0000000000100000 ( 515)                 .FILL x0020
(320F) 0069  0000000001101001 ( 515)                 .FILL x0069
(3210) 0073  0000000001110011 ( 515)                 .FILL x0073
(3211) 0020  0000000000100000 ( 515)                 .FILL x0020
(3212) 006F  0000000001101111 ( 515)                 .FILL x006F
(3213) 0075  0000000001110101 ( 515)                 .FILL x0075
(3214) 0074  0000000001110100 ( 515)                 .FILL x0074
(3215) 0020  0000000000100000 ( 515)                 .FILL x0020
(3216) 006F  0000000001101111 ( 515)                 .FILL x006F
(3217) 0066  0000000001100110 ( 515)                 .FILL x0066
(3218) 0020  0000000000100000 ( 515)                 .FILL x0020
(3219) 0072  0000000001110010 ( 515)                 .FILL x0072
(321A) 0061  0000000001100001 ( 515)                 .FILL x0061
(321B) 006E  0000000001101110 ( 515)                 .FILL x006E
(321C) 0067  0000000001100111 ( 515)                 .FILL x0067
(321D) 0065  0000000001100101 ( 515)                 .FILL x0065
(321E) 002E  0000000000101110 ( 515)                 .FILL x002E
(321F) 0000  0000000000000000 ( 515)                 .FILL x0000
(3220) 4000  0100000000000000 ( 516) SAVER3          .FILL x4000
(3221) 0300  0000001100000000 ( 517) Save            .FILL x0300
(3222) 0045  0000000001000101 ( 521) OverflowMsg     .FILL x0045
(3223) 0072  0000000001110010 ( 521)                 .FILL x0072
(3224) 0072  0000000001110010 ( 521)                 .FILL x0072
(3225) 006F  0000000001101111 ( 521)                 .FILL x006F
(3226) 0072  0000000001110010 ( 521)                 .FILL x0072
(3227) 003A  0000000000111010 ( 521)                 .FILL x003A
(3228) 0020  0000000000100000 ( 521)                 .FILL x0020
(3229) 0053  0000000001010011 ( 521)                 .FILL x0053
(322A) 0074  0000000001110100 ( 521)                 .FILL x0074
(322B) 0061  0000000001100001 ( 521)                 .FILL x0061
(322C) 0063  0000000001100011 ( 521)                 .FILL x0063
(322D) 006B  0000000001101011 ( 521)                 .FILL x006B
(322E) 0020  0000000000100000 ( 521)                 .FILL x0020
(322F) 0069  0000000001101001 ( 521)                 .FILL x0069
(3230) 0073  0000000001110011 ( 521)                 .FILL x0073
(3231) 0020  0000000000100000 ( 521)                 .FILL x0020
(3232) 0046  0000000001000110 ( 521)                 .FILL x0046
(3233) 0075  0000000001110101 ( 521)                 .FILL x0075
(3234) 006C  0000000001101100 ( 521)                 .FILL x006C
(3235) 006C  0000000001101100 ( 521)                 .FILL x006C
(3236) 002E  0000000000101110 ( 521)                 .FILL x002E
(3237) 0000  0000000000000000 ( 521)                 .FILL x0000
(3238) 002B  0000000000101011 ( 522) ASCIIplus       .FILL x002B
(3239) 002D  0000000000101101 ( 523) ASCIIminus      .FILL x002D
(323A) 0030  0000000000110000 ( 524) ASCIIoffset     .FILL x0030
(323B) FF9C  1111111110011100 ( 525) Neg100          .FILL xFF9C
(323C) 0064  0000000001100100 ( 526) Pos100          .FILL x0064
(323D) FFF6  1111111111110110 ( 527) Neg10           .FILL xFFF6
(323E) 0000  0000000000000000 ( 529) SavePush        .FILL x0000
(323F) 0000  0000000000000000 ( 530) Save1           .FILL x0000
(3240) 30E7  0011000011100111 ( 531) NewlineLocation .FILL x30E7
(3241) 315D  0011000101011101 ( 532) FailureValueLocation .FILL x315D
(3242) 03E8  0000001111101000 ( 534) SavedValue      .FILL x03E8
(3243) 0043  0000000001000011 ( 536) HeaderInfo      .FILL x0043
(3244) 006F  0000000001101111 ( 536)                 .FILL x006F
(3245) 006D  0000000001101101 ( 536)                 .FILL x006D
(3246) 006D  0000000001101101 ( 536)                 .FILL x006D
(3247) 0061  0000000001100001 ( 536)                 .FILL x0061
(3248) 006E  0000000001101110 ( 536)                 .FILL x006E
(3249) 0064  0000000001100100 ( 536)                 .FILL x0064
(324A) 0073  0000000001110011 ( 536)                 .FILL x0073
(324B) 003A  0000000000111010 ( 536)                 .FILL x003A
(324C) 0020  0000000000100000 ( 536)                 .FILL x0020
(324D) 004E  0000000001001110 ( 536)                 .FILL x004E
(324E) 0075  0000000001110101 ( 536)                 .FILL x0075
(324F) 006D  0000000001101101 ( 536)                 .FILL x006D
(3250) 0062  0000000001100010 ( 536)                 .FILL x0062
(3251) 0065  0000000001100101 ( 536)                 .FILL x0065
(3252) 0072  0000000001110010 ( 536)                 .FILL x0072
(3253) 0020  0000000000100000 ( 536)                 .FILL x0020
(3254) 006F  0000000001101111 ( 536)                 .FILL x006F
(3255) 0072  0000000001110010 ( 536)                 .FILL x0072
(3256) 0020  0000000000100000 ( 536)                 .FILL x0020
(3257) 0028  0000000000101000 ( 536)                 .FILL x0028
(3258) 002B  0000000000101011 ( 536)                 .FILL x002B
(3259) 002C  0000000000101100 ( 536)                 .FILL x002C
(325A) 002D  0000000000101101 ( 536)                 .FILL x002D
(325B) 002C  0000000000101100 ( 536)                 .FILL x002C
(325C) 002A  0000000000101010 ( 536)                 .FILL x002A
(325D) 002C  0000000000101100 ( 536)                 .FILL x002C
(325E) 0021  0000000000100001 ( 536)                 .FILL x0021
(325F) 002C  0000000000101100 ( 536)                 .FILL x002C
(3260) 0025  0000000000100101 ( 536)                 .FILL x0025
(3261) 002C  0000000000101100 ( 536)                 .FILL x002C
(3262) 0044  0000000001000100 ( 536)                 .FILL x0044
(3263) 002C  0000000000101100 ( 536)                 .FILL x002C
(3264) 0053  0000000001010011 ( 536)                 .FILL x0053
(3265) 002C  0000000000101100 ( 536)                 .FILL x002C
(3266) 004C  0000000001001100 ( 536)                 .FILL x004C
(3267) 0029  0000000000101001 ( 536)                 .FILL x0029
(3268) 0000  0000000000000000 ( 536)                 .FILL x0000
(3269) 33D5  0011001111010101 ( 538) PUSH            ST    R1 Save1
(326A) E334  1110001100110100 ( 539)                 LEA   R1 StackMax
(326B) 927F  1001001001111111 ( 540)                 NOT   R1 R1
(326C) 1261  0001001001100001 ( 541)                 ADD   R1 R1 #1
(326D) 1246  0001001001000110 ( 542)                 ADD   R1 R1 R6
(326E) 0403  0000010000000011 ( 543)                 BRZ   Overflow
(326F) 1DBF  0001110110111111 ( 544)                 ADD   R6 R6 #-1
(3270) 7180  0111000110000000 ( 545)                 STR   R0 R6 #0
(3271) 0E09  0000111000001001 ( 546)                 BRNZP Success_exit
(3272) 3FCB  0011111111001011 ( 547) Overflow        ST    R7 SavePush
(3273) E1AE  1110000110101110 ( 549)                 LEA   R0 OverflowMsg
(3274) F022  1111000000100010 ( 550)                 TRAP  x22
(3275) A1CA  1010000111001010 ( 551)                 LDI   R0 NewlineLocation
(3276) F021  1111000000100001 ( 552)                 TRAP  x21
(3277) 2FC6  0010111111000110 ( 553)                 LD    R7 SavePush
(3278) 23C6  0010001111000110 ( 554)                 LD    R1 Save1
(3279) A1C7  1010000111000111 ( 555)                 LDI   R0 FailureValueLocation
(327A) C1C0  1100000111000000 ( 556)                 RET   
(327B) 23C3  0010001111000011 ( 558) Success_exit    LD    R1 Save1
(327C) C1C0  1100000111000000 ( 559)                 RET   
(327D) E12B  1110000100101011 ( 561) POP             LEA   R0 StackBase
(327E) 903F  1001000000111111 ( 562)                 NOT   R0 R0
(327F) 1022  0001000000100010 ( 563)                 ADD   R0 R0 #2
(3280) 1006  0001000000000110 ( 564)                 ADD   R0 R0 R6
(3281) 0403  0000010000000011 ( 565)                 BRZ   Underflow
(3282) 6180  0110000110000000 ( 566)                 LDR   R0 R6 #0
(3283) 1DA1  0001110110100001 ( 567)                 ADD   R6 R6 #1
(3284) C1C0  1100000111000000 ( 568)                 RET   
(3285) 3F9B  0011111110011011 ( 569) Underflow       ST    R7 Save
(3286) A1B9  1010000110111001 ( 570)                 LDI   R0 NewlineLocation
(3287) F021  1111000000100001 ( 571)                 TRAP  x21
(3288) E14F  1110000101001111 ( 572)                 LEA   R0 UnderflowMsg
(3289) F022  1111000000100010 ( 573)                 TRAP  x22
(328A) A1B5  1010000110110101 ( 574)                 LDI   R0 NewlineLocation
(328B) F021  1111000000100001 ( 575)                 TRAP  x21
(328C) 2F94  0010111110010100 ( 576)                 LD    R7 Save
(328D) A1B3  1010000110110011 ( 577)                 LDI   R0 FailureValueLocation
(328E) C1C0  1100000111000000 ( 578)                 RET   
